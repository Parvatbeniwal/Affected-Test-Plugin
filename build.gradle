import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.17.3'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'com.your'
version = '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.github.javaparser:javaparser-core:3.26.0'
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.26.0'
    implementation('org.eclipse.jgit:org.eclipse.jgit:6.7.0.202309050840-r') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    implementation 'org.jetbrains:annotations:24.0.1'
    compileOnly 'com.jetbrains:ideaIC:2023.2.6'
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.7.0"
    testImplementation 'junit:junit:4.13.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

intellij {
    version.set '2023.2.6'
    type.set 'IC' // Target IDE Platform
    plugins = ['java', 'junit']
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = '17'
    }
}

patchPluginXml {
    sinceBuild = '232'
    untilBuild = '242.*'
}

signPlugin {
    certificateChain = System.getenv('CERTIFICATE_CHAIN')
    privateKey = System.getenv('PRIVATE_KEY')
    password = System.getenv('PRIVATE_KEY_PASSWORD')
}

publishPlugin {
    token = System.getenv('PUBLISH_TOKEN')
}

// Define the custom Jar task
task createPluginJar(type: Jar) {
    archiveBaseName.set('Affected Unit tests runner final')
    archiveVersion.set('0.0.1')
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': 'com.your.MainClass' // This is not usually needed for an IntelliJ plugin
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

kotlin {
    jvmToolchain(20)
}
